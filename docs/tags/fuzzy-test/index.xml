<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>fuzzy, test on Go设计实现内幕</title>
    <link>https://hitzhangjie.pro/go-internals-v2/tags/fuzzy-test/</link>
    <description>Recent content in fuzzy, test on Go设计实现内幕</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://hitzhangjie.pro/go-internals-v2/tags/fuzzy-test/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>practical fuzzing with go</title>
      <link>https://hitzhangjie.pro/go-internals-v2/posts/practical-fuzzing-with-go/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hitzhangjie.pro/go-internals-v2/posts/practical-fuzzing-with-go/</guid>
      <description>Let&amp;rsquo;s Summarize #  fuzzing test，模糊测试，指的是自动构造一些测试用例来进行测试，有助于节省编写测试用例的时间，有助于发现程序中存在的一些不健壮的处理逻辑、bug。
go新版本也将引入fuzzing test功能，到时候可以直接用。现阶段的话，需要借助一些第三方库来针对待测试函数的参数类型来自动构造用例，比如有些库之处自动填充struct中的字段，类似的库有：
 https://github.com/bxcodec/faker https://github.com/brianvoe/gofakeit https://github.com/google/gofuzz  Source Analysis #  References #   https://docs.google.com/presentation/d/1KkLrzc8O-dkBQ0itVWcqp3gZbtf_IM6MVfy84FndVlM/edit#slide=id.p  </description>
    </item>
    
  </channel>
</rss>
