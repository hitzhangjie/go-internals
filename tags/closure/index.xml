<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>closure on Go设计实现内幕</title><link>https://hitzhangjie.pro/go-internals-v2/tags/closure/</link><description>Recent content in closure on Go设计实现内幕</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://hitzhangjie.pro/go-internals-v2/tags/closure/index.xml" rel="self" type="application/rss+xml"/><item><title>how does go implement closures</title><link>https://hitzhangjie.pro/go-internals-v2/docs/Builtins/closure/how-does-go-implement-closures/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hitzhangjie.pro/go-internals-v2/docs/Builtins/closure/how-does-go-implement-closures/</guid><description>Let&amp;rsquo;s Summarize # 介绍了go中闭包是如何实现的，包括闭包中引用的外部变量何时采用值捕获（readonly且数据量较小），何时采用引用捕获（readwrite，or数据量偏大）。编译器对闭包进行处理时，会自动完成上述判断与代码的转换。
Source Analysis # References # https://www.hitzhangjie.pro/blog/2018-05-19-golang-function-closure%E5%AE%9E%E7%8E%B0%E6%9C%BA%E5%88%B6/</description></item><item><title>how does go implement closures</title><link>https://hitzhangjie.pro/go-internals-v2/posts/how-does-go-implement-closures/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hitzhangjie.pro/go-internals-v2/posts/how-does-go-implement-closures/</guid><description>Let&amp;rsquo;s Summarize # 介绍了go中闭包是如何实现的，包括闭包中引用的外部变量何时采用值捕获（readonly且数据量较小），何时采用引用捕获（readwrite，or数据量偏大）。编译器对闭包进行处理时，会自动完成上述判断与代码的转换。
Source Analysis # References # https://www.hitzhangjie.pro/blog/2018-05-19-golang-function-closure%E5%AE%9E%E7%8E%B0%E6%9C%BA%E5%88%B6/</description></item></channel></rss>