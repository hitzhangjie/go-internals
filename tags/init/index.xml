<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>init on Go设计实现内幕</title><link>https://hitzhangjie.pro/go-internals/tags/init/</link><description>Recent content in init on Go设计实现内幕</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://hitzhangjie.pro/go-internals/tags/init/index.xml" rel="self" type="application/rss+xml"/><item><title>init functions</title><link>https://hitzhangjie.pro/go-internals/docs/Builtins/init/init-functions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hitzhangjie.pro/go-internals/docs/Builtins/init/init-functions/</guid><description>Let&amp;rsquo;s Summarize # 介绍了go程序中func init()函数的调用时机以及如何避免重复调用的。
package a依赖package b，那么先执行b中的全局变量初始化、func init函数，再执行a中的全局变量初始化、func init函数，这些都是在执行main.main之前完成的。
Source Analysis # References # https://medium.com/a-journey-with-go/go-init-functions-319dbb12831c</description></item><item><title>init functions</title><link>https://hitzhangjie.pro/go-internals/posts/init-functions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hitzhangjie.pro/go-internals/posts/init-functions/</guid><description>Let&amp;rsquo;s Summarize # 介绍了go程序中func init()函数的调用时机以及如何避免重复调用的。
package a依赖package b，那么先执行b中的全局变量初始化、func init函数，再执行a中的全局变量初始化、func init函数，这些都是在执行main.main之前完成的。
Source Analysis # References # https://medium.com/a-journey-with-go/go-init-functions-319dbb12831c</description></item></channel></rss>